# Jskad keyboard init file
#
# This file must remain readable by the
# java.util.Properties.load(InputStream) mechanism, so don't just edit
# it willy-nilly.  Follow the trend!
#
# "nil" is used to mean "there isn't one for this keyboard."

# How many keyboards are there?
number.of.keyboards = 4

keyboard.name.for.popup.1 = Extended Wylie
keyboard.rtf.help.file.1 = Wylie_keyboard.rtf
keyboard.ini.file.1 = nil

keyboard.name.for.popup.2 = TCC Keyboard \#1
keyboard.rtf.help.file.2 = TCC_keyboard_1.rtf
keyboard.ini.file.2 = tcc_keyboard_1.ini

keyboard.name.for.popup.3 = TCC Keyboard \#2
keyboard.rtf.help.file.3 = TCC_keyboard_2.rtf
keyboard.ini.file.3 = tcc_keyboard_2.ini

keyboard.name.for.popup.4 = Sambhota Keymap One
keyboard.rtf.help.file.4 = Sambhota_keymap_one.rtf
keyboard.ini.file.4 = sambhota_keyboard_1.ini

# This keyboard has many bugs.  "So does the Extended Wylie keyboard,"
# you say, but this one has many many bugs.  Want to fix it?  Don't
# try the .ini file route at all.  Instead, build a keyboard using the
# ACIP->TMW conversion technology in the package
# org.thdl.tib.text.ttt.
#
#keyboard.name.for.popup.5 = Asian Classics Input Project (ACIP) -- BUGGY
#keyboard.rtf.help.file.5 = nil
#keyboard.ini.file.5 = acip_keyboard.ini
